{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateSearchIndexesOperation = void 0;\nconst operation_1 = require(\"../operation\");\n/** @internal */\nclass CreateSearchIndexesOperation extends operation_1.AbstractOperation {\n  constructor(collection, descriptions) {\n    super();\n    this.collection = collection;\n    this.descriptions = descriptions;\n  }\n  execute(server, session, callback) {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      createSearchIndexes: namespace.collection,\n      indexes: this.descriptions\n    };\n    server.command(namespace, command, {\n      session\n    }, (err, res) => {\n      if (err || !res) {\n        callback(err);\n        return;\n      }\n      const indexesCreated = res?.indexesCreated ?? [];\n      callback(undefined, indexesCreated.map(_ref => {\n        let {\n          name\n        } = _ref;\n        return name;\n      }));\n    });\n  }\n}\nexports.CreateSearchIndexesOperation = CreateSearchIndexesOperation;","map":{"version":3,"names":["operation_1","require","CreateSearchIndexesOperation","AbstractOperation","constructor","collection","descriptions","execute","server","session","callback","namespace","fullNamespace","command","createSearchIndexes","indexes","err","res","indexesCreated","undefined","map","_ref","name","exports"],"sources":["C:\\Users\\kin_v\\OneDrive\\Documents\\Orbital\\orbital-code\\node_modules\\mongodb\\src\\operations\\search_indexes\\create.ts"],"sourcesContent":["import type { Document } from 'bson';\n\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport type { Callback } from '../../utils';\nimport { AbstractOperation } from '../operation';\n\n/** @internal */\nexport interface SearchIndexDescription {\n  /** The name of the index. */\n  name?: string;\n\n  /** The index definition. */\n  description: Document;\n}\n\n/** @internal */\nexport class CreateSearchIndexesOperation extends AbstractOperation<string[]> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly descriptions: ReadonlyArray<SearchIndexDescription>\n  ) {\n    super();\n  }\n\n  execute(server: Server, session: ClientSession | undefined, callback: Callback<string[]>): void {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      createSearchIndexes: namespace.collection,\n      indexes: this.descriptions\n    };\n\n    server.command(namespace, command, { session }, (err, res) => {\n      if (err || !res) {\n        callback(err);\n        return;\n      }\n\n      const indexesCreated: Array<{ name: string }> = res?.indexesCreated ?? [];\n\n      callback(\n        undefined,\n        indexesCreated.map(({ name }) => name)\n      );\n    });\n  }\n}\n"],"mappings":";;;;;;AAMA,MAAAA,WAAA,GAAAC,OAAA;AAWA;AACA,MAAaC,4BAA6B,SAAQF,WAAA,CAAAG,iBAA2B;EAC3EC,YACmBC,UAAsB,EACtBC,YAAmD;IAEpE,KAAK,EAAE;IAHU,KAAAD,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;EAG/B;EAEAC,OAAOA,CAACC,MAAc,EAAEC,OAAkC,EAAEC,QAA4B;IACtF,MAAMC,SAAS,GAAG,IAAI,CAACN,UAAU,CAACO,aAAa;IAC/C,MAAMC,OAAO,GAAG;MACdC,mBAAmB,EAAEH,SAAS,CAACN,UAAU;MACzCU,OAAO,EAAE,IAAI,CAACT;KACf;IAEDE,MAAM,CAACK,OAAO,CAACF,SAAS,EAAEE,OAAO,EAAE;MAAEJ;IAAO,CAAE,EAAE,CAACO,GAAG,EAAEC,GAAG,KAAI;MAC3D,IAAID,GAAG,IAAI,CAACC,GAAG,EAAE;QACfP,QAAQ,CAACM,GAAG,CAAC;QACb;;MAGF,MAAME,cAAc,GAA4BD,GAAG,EAAEC,cAAc,IAAI,EAAE;MAEzER,QAAQ,CACNS,SAAS,EACTD,cAAc,CAACE,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC;QAAI,CAAE,GAAAD,IAAA;QAAA,OAAKC,IAAI;MAAA,EAAC,CACvC;IACH,CAAC,CAAC;EACJ;;AA5BFC,OAAA,CAAArB,4BAAA,GAAAA,4BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}