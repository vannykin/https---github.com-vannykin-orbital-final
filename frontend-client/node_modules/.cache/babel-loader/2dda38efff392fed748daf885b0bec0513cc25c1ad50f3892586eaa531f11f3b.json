{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunAdminCommandOperation = exports.RunCommandOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass RunCommandOperation extends command_1.CommandOperation {\n  constructor(parent, command, options) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n  execute(server, session, callback) {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\nexports.RunCommandOperation = RunCommandOperation;\nclass RunAdminCommandOperation extends RunCommandOperation {\n  constructor(parent, command, options) {\n    super(parent, command, options);\n    this.ns = new utils_1.MongoDBNamespace('admin');\n  }\n}\nexports.RunAdminCommandOperation = RunAdminCommandOperation;","map":{"version":3,"names":["utils_1","require","command_1","RunCommandOperation","CommandOperation","constructor","parent","command","options","execute","server","session","callback","executeCommand","exports","RunAdminCommandOperation","ns","MongoDBNamespace"],"sources":["C:\\Users\\kin_v\\OneDrive\\Documents\\Orbital\\orbital-code\\node_modules\\mongodb\\src\\operations\\run_command.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document } from '../bson';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, MongoDBNamespace } from '../utils';\nimport { CommandOperation, OperationParent } from './command';\n\n/** @public */\nexport type RunCommandOptions = {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  /** The read preference */\n  readPreference?: ReadPreferenceLike;\n\n  // The following options were \"accidentally\" supported\n  // Since the options are generally supported through inheritance\n\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  willRetryWrite?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  omitReadPreference?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  writeConcern?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  explain?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  readConcern?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  collation?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  maxTimeMS?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  comment?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  retryWrites?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  dbName?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  authdb?: any;\n  /** @deprecated This is an internal option that has undefined behavior for this API */\n  noResponse?: any;\n\n  /** @internal Used for transaction commands */\n  bypassPinningCheck?: boolean;\n} & BSONSerializeOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends CommandOperation<T> {\n  override options: RunCommandOptions;\n  command: Document;\n\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, command, options);\n    this.ns = new MongoDBNamespace('admin');\n  }\n}\n"],"mappings":";;;;;;AAIA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAD,OAAA;AAyCA;AACA,MAAaE,mBAAkC,SAAQD,SAAA,CAAAE,gBAAmB;EAIxEC,YAAYC,MAAmC,EAAEC,OAAiB,EAAEC,OAA2B;IAC7F,KAAK,CAACF,MAAM,EAAEE,OAAO,CAAC;IACtB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,EAAE;IAC5B,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAESE,OAAOA,CACdC,MAAc,EACdC,OAAkC,EAClCC,QAAqB;IAErB,MAAML,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,IAAI,CAACM,cAAc,CAACH,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAEK,QAAQ,CAAC;EACzD;;AAjBFE,OAAA,CAAAX,mBAAA,GAAAA,mBAAA;AAoBA,MAAaY,wBAAuC,SAAQZ,mBAAsB;EAChFE,YAAYC,MAAmC,EAAEC,OAAiB,EAAEC,OAA2B;IAC7F,KAAK,CAACF,MAAM,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAC/B,IAAI,CAACQ,EAAE,GAAG,IAAIhB,OAAA,CAAAiB,gBAAgB,CAAC,OAAO,CAAC;EACzC;;AAJFH,OAAA,CAAAC,wBAAA,GAAAA,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}