{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CollectionsOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass CollectionsOperation extends operation_1.AbstractOperation {\n  constructor(db, options) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n  execute(server, session, callback) {\n    // Let's get the collection names\n    this.db.listCollections({}, {\n      ...this.options,\n      nameOnly: true,\n      readPreference: this.readPreference,\n      session\n    }).toArray().then(documents => {\n      const collections = [];\n      for (const {\n        name\n      } of documents) {\n        if (!name.includes('$')) {\n          // Filter collections removing any illegal ones\n          collections.push(new collection_1.Collection(this.db, name, this.db.s.options));\n        }\n      }\n      // Return the collection objects\n      callback(undefined, collections);\n    }, error => callback(error));\n  }\n}\nexports.CollectionsOperation = CollectionsOperation;","map":{"version":3,"names":["collection_1","require","operation_1","CollectionsOperation","AbstractOperation","constructor","db","options","execute","server","session","callback","listCollections","nameOnly","readPreference","toArray","then","documents","collections","name","includes","push","Collection","s","undefined","error","exports"],"sources":["C:\\Users\\kin_v\\OneDrive\\Documents\\Orbital\\orbital-code\\node_modules\\mongodb\\src\\operations\\collections.ts"],"sourcesContent":["import { Collection } from '../collection';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractOperation, OperationOptions } from './operation';\n\nexport interface CollectionsOptions extends OperationOptions {\n  nameOnly?: boolean;\n}\n\n/** @internal */\nexport class CollectionsOperation extends AbstractOperation<Collection[]> {\n  override options: CollectionsOptions;\n  db: Db;\n\n  constructor(db: Db, options: CollectionsOptions) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Collection[]>\n  ): void {\n    // Let's get the collection names\n    this.db\n      .listCollections(\n        {},\n        { ...this.options, nameOnly: true, readPreference: this.readPreference, session }\n      )\n      .toArray()\n      .then(\n        documents => {\n          const collections = [];\n          for (const { name } of documents) {\n            if (!name.includes('$')) {\n              // Filter collections removing any illegal ones\n              collections.push(new Collection(this.db, name, this.db.s.options));\n            }\n          }\n          // Return the collection objects\n          callback(undefined, collections);\n        },\n        error => callback(error)\n      );\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AAKA,MAAAC,WAAA,GAAAD,OAAA;AAMA;AACA,MAAaE,oBAAqB,SAAQD,WAAA,CAAAE,iBAA+B;EAIvEC,YAAYC,EAAM,EAAEC,OAA2B;IAC7C,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,EAAE,GAAGA,EAAE;EACd;EAESE,OAAOA,CACdC,MAAc,EACdC,OAAkC,EAClCC,QAAgC;IAEhC;IACA,IAAI,CAACL,EAAE,CACJM,eAAe,CACd,EAAE,EACF;MAAE,GAAG,IAAI,CAACL,OAAO;MAAEM,QAAQ,EAAE,IAAI;MAAEC,cAAc,EAAE,IAAI,CAACA,cAAc;MAAEJ;IAAO,CAAE,CAClF,CACAK,OAAO,EAAE,CACTC,IAAI,CACHC,SAAS,IAAG;MACV,MAAMC,WAAW,GAAG,EAAE;MACtB,KAAK,MAAM;QAAEC;MAAI,CAAE,IAAIF,SAAS,EAAE;QAChC,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;UACvB;UACAF,WAAW,CAACG,IAAI,CAAC,IAAIrB,YAAA,CAAAsB,UAAU,CAAC,IAAI,CAAChB,EAAE,EAAEa,IAAI,EAAE,IAAI,CAACb,EAAE,CAACiB,CAAC,CAAChB,OAAO,CAAC,CAAC;;;MAGtE;MACAI,QAAQ,CAACa,SAAS,EAAEN,WAAW,CAAC;IAClC,CAAC,EACDO,KAAK,IAAId,QAAQ,CAACc,KAAK,CAAC,CACzB;EACL;;AApCFC,OAAA,CAAAvB,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}